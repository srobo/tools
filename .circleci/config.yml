version: 2.1

references:
  build-docs-checksum-file: &build-docs-checksum-file
    run:
      name: Build docs checksum file
      command: |
        declare -a FILES=(
          "docs/requirements.txt"
        )
        for f in ${FILES[@]}
        do
          echo "# $f" >> docs-requirements.txt
          cat $f >> docs-requirements.txt
        done

        echo "# self" >> docs-requirements.txt
        echo "." >> docs-requirements.txt

        declare -a FILES=(
          "setup.py"
          "docs-requirements.txt"
        )
        python3 --version >> .docs-checksum
        for f in ${FILES[@]}
        do
          echo "# $f" >> .docs-checksum
          cat $f >> .docs-checksum
        done
  restore-docs-dependencies-cache: &restore-docs-dependencies-cache
    restore_cache:
      keys:
        - deps-docs-1-py<< parameters.version >>-{{ checksum ".docs-checksum" }}
  install-docs-dependencies: &install-docs-dependencies
    run:
      name: Install Dependencies
      command: |
        python3 -m venv venv
        venv/bin/pip install -r docs-requirements.txt
  save-docs-dependencies-cache: &save-docs-dependencies-cache
    save_cache:
      key: deps-docs-1-py<< parameters.version >>-{{ checksum ".docs-checksum" }}
      paths:
        - venv
  build-checksum-file: &build-checksum-file
    run:
      name: Build checksum file
      command: |
        declare -a FILES=(
          "script/linting/requirements.txt"
        )
        for f in ${FILES[@]}
        do
          echo "# $f" >> all-requirements.txt
          cat $f >> all-requirements.txt
        done

        echo "# self" >> all-requirements.txt
        echo "." >> all-requirements.txt

        declare -a FILES=(
          "setup.py"
          "all-requirements.txt"
        )
        for f in ${FILES[@]}
        do
          echo "# $f" >> .checksum
          cat $f >> .checksum
        done
  restore-dependencies-cache: &restore-dependencies-cache
    restore_cache:
      keys:
        - deps-2-py<< parameters.version >>-{{ checksum ".checksum" }}
  install-dependencies: &install-dependencies
    run:
      name: Install Dependencies
      command: |
        python3 -m venv venv
        venv/bin/pip install -U pip setuptools wheel
        venv/bin/pip install -U 'Sphinx <7'
        venv/bin/pip install -r all-requirements.txt
  save-dependencies-cache: &save-dependencies-cache
    save_cache:
      key: deps-2-py<< parameters.version >>-{{ checksum ".checksum" }}
      paths:
        - venv
  parametrised-python-executor: &parametrised-python-executor
    parameters:
      version:
        type: string
    executor:
      name: python
      version: << parameters.version >>
  python-full-version-matrix: &python-full-version-matrix
    matrix:
      parameters:
        version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
  python-top-and-bottom-version-matrix: &python-top-and-bottom-version-matrix
    matrix:
      parameters:
        version: ["3.7", "3.13"]
  filter-tags: &filter-tags
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v.*/


executors:
  python:
    parameters:
      version:
        type: string
    docker:
      - image: cimg/python:<< parameters.version >>

jobs:
  docs:
    <<: *parametrised-python-executor

    steps:
      - checkout

      - *build-docs-checksum-file
      - *restore-docs-dependencies-cache
      - *install-docs-dependencies
      - *save-docs-dependencies-cache

      - run:
          name: Build the docs
          command: |
            source venv/bin/activate
            ./script/docs/build.sh

  test:
    <<: *parametrised-python-executor

    steps:
      - checkout

      - *build-checksum-file
      - *restore-dependencies-cache
      - *install-dependencies
      - *save-dependencies-cache

      - run:
          name: Run Tests
          command: |
            source venv/bin/activate
            ./run-tests --verbose

  lint:
    <<: *parametrised-python-executor

    steps:
      - checkout

      - *build-checksum-file
      - *restore-dependencies-cache
      - *install-dependencies
      - *save-dependencies-cache

      - run:
          name: Run Flake8
          command: |
            source venv/bin/activate
            # Ignore TODOs on CI, for now, even though we do want them
            # highlighted in development.
            ./script/linting/lint --extend-ignore=T000

  release:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout

      - run:
          name: Setup virtualenv
          command: |
            python3 -m venv venv
            venv/bin/pip install -r script/release/requirements.txt

      - run:
          name: Push to PyPI
          command: |
            source venv/bin/activate
            export TWINE_USERNAME=__token__
            export TWINE_PASSWORD=$PYPI_TOKEN
            ./script/release/release

workflows:
  version: 2.1

  validate:
    jobs:
      - docs:
          <<: *python-top-and-bottom-version-matrix
      - test:
          <<: *python-full-version-matrix
      - lint:
          <<: *python-top-and-bottom-version-matrix

  release:
    jobs:
      - docs:
          <<: *python-top-and-bottom-version-matrix
          <<: *filter-tags
      - test:
          <<: *python-full-version-matrix
          <<: *filter-tags
      - lint:
          <<: *python-top-and-bottom-version-matrix
          <<: *filter-tags
      - release:
          <<: *filter-tags
          requires:
            - docs
            - test
            - lint
